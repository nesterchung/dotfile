#!/bin/bash

function show_usage() {
echo "
NAME
     slack-theme

SYNOPSIS
     slack-theme
     slack-theme day
     slack-theme night
     slack-theme night-mono
     slack-theme aubergine
     slack-theme aubergine-mono
     slack-theme arc-dark
     slack-theme midnight-blue
     slack-theme midnight-blue-mono
     slack-theme solarized-dark
     slack-theme solarized-light
     slack-theme install
     slack-theme uninstall

DESCRIPTION
     Change Slack Colors

COMMANDS
     day
          Revert to Day Mode

     night
          Use Black CSS

     night-mono
          Use Night-Mono CSS

     aubergine
          Use Aubergine CSS

     aubergine-mono
          Use Aubergine-Mono CSS

     arc-dark
          Use Arc-Dark CSS

     midnight-blue
          Use Midnight-Blue CSS

     midnight-blue-mono
          Use Midnight-Blue-Mono CSS

     solarized-dark
          Use Solarized-Dark CSS

     solarized-light
          Use Solarized-Light CSS

     install
          Download necessary scripts

     uninstall
          Remove this tool from System

Report any bugs to mykehell123@gmail.com
"
}

INSTALL_DIR="$HOME/bin/slack-theme"

CSS_URL="https://raw.githubusercontent.com/laCour/slack-night-mode/master"

ARC_DARK_FILE="arc-dark.css"
AUBERGINE_FILE="aubergine.css"
AUBERGINE_MONO_FILE="aubergine-monospaced.css"
BLACK_FILE="black.css"
BLACK_MONO_FILE="black-monospaced.css"
MIDNIGHT_BLUE_FILE="midnight-blue.css"
MIDNIGHT_BLUE_MONO_FILE="midnight-blue-monospaced.css"
SOLARIZED_DARK_FILE="solarized-dark.css"
SOLARIZED_LIGHT_FILE="solarized-light.css"

ARC_DARK_URL="$CSS_URL/css/raw/variants/$ARC_DARK_FILE"
AUBERGINE_URL="$CSS_URL/css/raw/variants/$AUBERGINE_FILE"
AUBERGINE_MONO_URL="$CSS_URL/css/raw/variants/$AUBERGINE_MONO_FILE"
BLACK_URL="$CSS_URL/css/raw/$BLACK_FILE"
BLACK_MONO_URL="$CSS_URL/css/raw/variants/$BLACK_MONO_FILE"
MIDNIGHT_BLUE_URL="$CSS_URL/css/raw/variants/$MIDNIGHT_BLUE_FILE"
MIDNIGHT_BLUE_MONO_URL="$CSS_URL/css/raw/variants/$MIDNIGHT_BLUE_MONO_FILE"
SOLARIZED_DARK_URL="$CSS_URL/css/raw/variants/$SOLARIZED_DARK_FILE"
SOLARIZED_LIGHT_URL="$CSS_URL/css/raw/variants/$SOLARIZED_LIGHT_FILE"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
BACKUP_FOLDER="$DIR/backup"
BACKUP_FILE="$BACKUP_FOLDER/ssb-interop.js"
if [ "$(uname)" == "Linux" ] # Linux OS
then
    INTEROP_FILE="/usr/lib/slack/resources/app.asar.unpacked/src/static/ssb-interop.js"
elif [ "$(uname)" == "Darwin" ] # Mac OS
then
    INTEROP_FILE="/Applications/Slack.app/Contents/Resources/app.asar.unpacked/src/static/ssb-interop.js"
fi

if [ -z "$SLACK_THEME_SHELL_PROFILE" ]
then
    SLACK_THEME_SHELL_PROFILE=~/".bash_profile" # Mac OS
    if [ "$(uname)" == "Linux" ] # Linux OS
    then
        SLACK_THEME_SHELL_PROFILE=~/".profile"
    fi
else
    echo "sh: $SLACK_THEME_SHELL_PROFILE"
fi

# exit if no argument is specified
if [ -z "$1" ]
then
    show_usage
    exit 0
fi

function pull-css() {
    mkdir -p css
    curl $ARC_DARK_URL -O && mv $ARC_DARK_FILE "$DIR/css/$ARC_DARK_FILE"
    curl $AUBERGINE_URL -O && mv $AUBERGINE_FILE "$DIR/css/$AUBERGINE_FILE"
    curl $AUBERGINE_MONO_URL -O && mv $AUBERGINE_MONO_FILE "$DIR/css/$AUBERGINE_MONO_FILE"
    curl $BLACK_URL -O && mv $BLACK_FILE "$DIR/css/$BLACK_FILE"
    curl $BLACK_MONO_URL -O && mv $BLACK_MONO_FILE "$DIR/css/$BLACK_MONO_FILE"
    curl $MIDNIGHT_BLUE_URL -O && mv $MIDNIGHT_BLUE_FILE "$DIR/css/$MIDNIGHT_BLUE_FILE"
    curl $MIDNIGHT_BLUE_MONO_URL -O && mv $MIDNIGHT_BLUE_MONO_FILE "$DIR/css/$MIDNIGHT_BLUE_MONO_FILE"
    curl $SOLARIZED_DARK_URL -O && mv $SOLARIZED_DARK_FILE "$DIR/css/$SOLARIZED_DARK_FILE"
    curl $SOLARIZED_LIGHT_URL -O && mv $SOLARIZED_LIGHT_FILE "$DIR/css/$SOLARIZED_LIGHT_FILE"
}

function set-env-vars() {
    if [ -z "$(cat $SLACK_THEME_SHELL_PROFILE | grep "PATH=\$PATH:$INSTALL_DIR")" ]
    then
        if [ ! -f "$SLACK_THEME_SHELL_PROFILE" ]; then
            mkdir -p "`dirname \"$SLACK_THEME_SHELL_PROFILE\"`" 2>/dev/null
        fi
        echo "export PATH=\$PATH:$INSTALL_DIR" >> "$SLACK_THEME_SHELL_PROFILE"
        if [ "$SLACK_THEME_SHELL_PROFILE" != "~/.bash_profile" ]
        then
            echo "export SLACK_THEME_SHELL_PROFILE=\"$SLACK_THEME_SHELL_PROFILE\"" >> "$SLACK_THEME_SHELL_PROFILE"
        fi
    fi
}

# install
if [ "$1" == "install" ]
then
    mkdir -p "$HOME/bin"
    mkdir -p $INSTALL_DIR
    # ensure files are in installation directory
    if [ ! -f "$INSTALL_DIR/slack-theme" ]
    then
        cp "$DIR/slack-theme" "$INSTALL_DIR/slack-theme"
        set-env-vars
        cd $INSTALL_DIR
        bash "$INSTALL_DIR/slack-theme" install
        if [ -f "$HOME/slack-theme" ]
        then
            rm "$HOME/slack-theme"
        fi
        exit 0
    fi
    curl https://raw.githubusercontent.com/mykeels/slack-theme-cli/master/slack-day -O
    curl https://raw.githubusercontent.com/mykeels/slack-theme-cli/master/slack-night -O
    chmod 766 "$DIR/slack-theme"
    chmod 766 "$DIR/slack-day"
    chmod 766 "$DIR/slack-night"
    pull-css # pull all relevant css files
    if [ "$(uname)" == "Linux" ]
    then
        chmod 666 $INTEROP_FILE
    fi
    set-env-vars
    echo "installed successfully"
    exit 0
fi

# uninstall
if [ "$1" == "uninstall" ]
then
    . "$INSTALL_DIR/slack-day"
    rm "$INSTALL_DIR/slack-day"
    rm "$INSTALL_DIR/slack-night"
    rm -rf "$INSTALL_DIR/css"
    rm -rf "$BACKUP_FOLDER"
    if [ "$(uname)" == "Linux" ] # Linux OS
    then
        sed "/export PATH=\$PATH:${INSTALL_DIR//\//\\/}/d" "$SLACK_THEME_SHELL_PROFILE" -i
        sed "/export SLACK_THEME_SHELL_PROFILE=/d" "$SLACK_THEME_SHELL_PROFILE" -i
    elif [ "$(uname)" == "Darwin" ] # Mac OS
    then
        sed -i '' "/export PATH=\$PATH:${INSTALL_DIR//\//\\/}/g" "$SLACK_THEME_SHELL_PROFILE"
        sed -i '' "/export SLACK_THEME_SHELL_PROFILE=/g" "$SLACK_THEME_SHELL_PROFILE"
    fi
    
    rm -rf "$INSTALL_DIR"
    echo "uninstalled successfully"
    exit 0
fi

if [ "$1" == "pull-css" ]
then
    pull-css
    exit 0
fi

if [ "$1" == "day" ]
then
    . "$DIR/slack-day"
    exit 0
fi

if [ "$1" == "night" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$BLACK_FILE")
fi

if [ "$1" == "night-mono" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$BLACK_MONO_FILE")
fi

if [ "$1" == "aubergine" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$AUBERGINE_FILE")
fi

if [ "$1" == "aubergine-mono" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$AUBERGINE_MONO_FILE")
fi

if [ "$1" == "arc-dark" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$ARC_DARK_FILE")
fi

if [ "$1" == "midnight-blue" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$MIDNIGHT_BLUE_FILE")
fi

if [ "$1" == "midnight-blue-mono" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$MIDNIGHT_BLUE_MONO_FILE")
fi

if [ "$1" == "solarized-dark" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$SOLARIZED_DARK_FILE")
fi

if [ "$1" == "solarized-light" ]
then
    CSS_CONTENT=$(cat "$DIR/css/$SOLARIZED_LIGHT_FILE")
fi

if [ -z "$CSS_CONTENT" ]
then
    echo "invalid command"
    exit 1
fi

NODE_SCRIPT="
document.addEventListener('DOMContentLoaded', function() {
 const css = \`$CSS_CONTENT\`
 const overrides = \`
   code { background-color: #535353; color: #85c5ff; } /* Change color: to whatever font color you want */
   .c-mrkdwn__pre, .c-mrkdwn__quote { background: #535353 !important; background-color: #535353 !important; }
 \`
 \$('<style></style>').appendTo('head').html(css + overrides);
});
"

if [ -f "$INTEROP_FILE" ]
then
    mkdir -p "$DIR/backup" # create folder if it does not exist
    if [ -z "$(cat "$INTEROP_FILE" | grep "DOMContentLoaded")" ]
    then
        cp "$INTEROP_FILE" "$BACKUP_FOLDER" # copy file as backup
    else
        if [ -f "$BACKUP_FILE" ]
        then
            cp "$BACKUP_FILE" "$INTEROP_FILE"
        else
            echo "backup file not found"
            exit 1
        fi
    fi
    echo "$NODE_SCRIPT" >> "$INTEROP_FILE" # append script to file
    
    # restart slack
    if [ "$(uname)" == "Linux" ] # Linux OS
    then
        killall "slack" # kill all slack processes
        slack </dev/null &>/dev/null & # start slack process in detached mode
    elif [ "$(uname)" == "Darwin" ] # Mac OS
    then
        killall "Slack" # kill all slack processes
        /Applications/Slack.app/Contents/MacOS/Slack </dev/null &>/dev/null & # start slack process in detached mode
    fi
else
    echo "file does not exist"
fi
